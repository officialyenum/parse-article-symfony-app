version: '3'
networks:
  nginx-php74-mysql8-node-rabbitmq:

services:
  nginx-service:
    container_name: nginx-container
    image: nginx:stable-alpine
    ports:
      - '8080:80'
    volumes:
      - ./app:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - nginx-php74-mysql8-node-rabbitmq
    depends_on:
      - php74-service
      - mysql8-service
      - node-service

  php74-service:
    container_name: php74-container
    build:
      context: .
      dockerfile: ./php/Dockerfile
    ports:
      - '19000:9000'
    volumes:
      - ./app:/var/www/html
    networks:
      - nginx-php74-mysql8-node-rabbitmq
    depends_on:
      - node-service

  mysql8-service:
    image: 'mysql/mysql-server:8.0'
    container_name: mysql8-container
    restart: always
    ports:
        - '4306:3306'
    environment:
        MYSQL_ROOT_PASSWORD: 'secret'
        MYSQL_ROOT_HOST: "%"
        MYSQL_DATABASE: 'parser'
        MYSQL_USER: 'root'
        MYSQL_PASSWORD: 'secret'
        MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
        - './mysql:/var/lib/mysql'
    networks:
        - nginx-php74-mysql8-node-rabbitmq
    healthcheck:
        test: ["CMD", "mysqladmin", "ping", "secret"]
        retries: 3
        timeout: 5s

  node-service:
    image: node:latest
    container_name: node-container
    restart: always
    volumes:
      - ./app:/var/www/html
    working_dir: /var/www/html
    networks:
      - nginx-php74-mysql8-node-rabbitmq

  rabbitmq38-service:
    image: 'rabbitmq:3.8-management'
    container_name: rabbitmq38-container
    ports: [5672, 15672]
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    networks:
      - nginx-php74-mysql8-node-rabbitmq
  mailer-service:
    image: schickling/mailcatcher
    container_name: mailer-container
    ports: [1025, 1080]

